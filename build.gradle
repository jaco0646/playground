import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

plugins {
    id 'groovy'
    id 'org.springframework.boot' version "$springBootVersion"
//    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'project-report'  // htmlDependencyReport
    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
}

// For actuator/info
gitProperties {
    dateFormat = 'yyyy-MM-dd h:mm a'
    keys = ['git.branch', 'git.build.version', 'git.commit.id', 'git.commit.time']
    customProperty 'git.commit.count', { it.repository.jgit.log().call().size() }  // https://github.com/n0mer/gradle-git-properties/blob/master/src/main/groovy/com/gorylenko/properties/CacheSupport.groovy#L30
    customProperty 'git.build.artifact', { project.tasks.findByName('bootJar').getBaseName() }
    customProperty 'git.build.java-version', { System.getProperty('java.version') }
    customProperty 'git.build.time', { DateTimeFormatter.ofPattern(dateFormat).format(LocalDateTime.now()) }
}

group 'com.playground'
version '1.0-SNAPSHOT'

sourceCompatibility = 16
targetCompatibility = 16

tasks.withType(JavaCompile) {
    options.compilerArgs += '--enable-preview'
}
tasks.withType(Test) {
    jvmArgs += '--enable-preview'
}
bootRun {
    jvmArgs = ['--enable-preview']
}

springBoot {
    mainClass.set('spring.Application')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.reflections:reflections:0.9.12'

    implementation "org.springframework:spring-webmvc:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-aop:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-devtools:$springBootVersion"

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "org.spockframework:spock-spring:$spockVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

test {
    useJUnitPlatform()
    afterSuite { desc, result ->
        if (!desc.parent) {
            if (result.testCount == 0) {
                throw new IllegalStateException("No tests were found. Failing the build.")
            }
        }
    }
}